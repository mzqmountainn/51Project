C51 COMPILER V9.54   MAIN                                                                  11/30/2023 23:48:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\keilc51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "UART.h"
   4          #include "LCD1602.h"
   5          #include "key_selfPlus.h"
   6          #include "Timer0.h"
   7          #include <stdlib.h>
   8          #include "MatrixKey.h"
   9          #include "AT24C02.h"
  10          
  11          typedef enum{false = 0,true =1} bool;
  12          
  13          unsigned char key;
  14          unsigned char Mkey;
  15          char pwm ; 
  16          bool startStatus = 0;
  17          bool setMode = 0;
  18          bool setModeFlag = 0;
  19          //此处变量为uart读取数据用变量（此处开始）
  20          //bool getChar =0;
  21          unsigned char rawChar[10];
  22          int frontData,endData;
  23          //此处结束
  24          //电机驱动定义 开始
  25          sbit IN1 = P1^0;
  26          sbit IN2 = P1^1;
  27          sbit ENA = P1^2;
  28          unsigned char count,compare;
  29          bool motorEnable = 0;
  30          //结束
  31          void parse();
  32          void changeJudge();
  33          
  34          void main()
  35          {
  36   1              pwm = (char)AT24C02_receiveByte(0);
  37   1              UART_Init();            //串口初始化
  38   1              LCD_Init();
  39   1              Timer0Init();
  40   1              //pwm = AT24C02_receiveByte(0);
  41   1              while(1)
  42   1              {
  43   2                      //LCD_ShowString(2,1,rawChar);
  44   2                      key=key_return();
  45   2                      Mkey = MatrixKey();
  46   2                      
  47   2                      compare=abs(pwm);
  48   2                      
  49   2                      if(key == 1){
  50   3                              startStatus = !startStatus;
  51   3                              if(startStatus)
  52   3                                      motorEnable =1;
  53   3                              else
  54   3                                      motorEnable =0;
C51 COMPILER V9.54   MAIN                                                                  11/30/2023 23:48:59 PAGE 2   

  55   3                      }
  56   2                      
  57   2                      if(key == 2)
  58   2                              setMode = !setMode;
  59   2                      if(key == 3&&pwm!=100&&setMode)
  60   2                              pwm+=10;
  61   2                      if(key == 4&&pwm!=-100&&setMode)
  62   2                              pwm-=10;
  63   2                      if(Mkey == 1){
  64   3                              P2_1 = !P2_1;
  65   3                              AT24C02_sendByte(0,(unsigned char)pwm);
  66   3                              Delay(5);
  67   3                      }
  68   2                      if(Mkey == 2){
  69   3                              motorEnable=!motorEnable;
  70   3                      }
  71   2                      
  72   2                      if(motorEnable)
  73   2                              ENA =1;
  74   2                      if(!motorEnable)
  75   2                              ENA =0;
  76   2                      
  77   2                      if(!startStatus)
  78   2                              {
  79   3                              LCD_ShowString(1,1,"                 ");
  80   3                              LCD_ShowString(2,1,"                 ");
  81   3                      }
  82   2                      if(startStatus){                                                                        //负数显示与三位数显示未装载
  83   3                              if(!setMode){
  84   4                                      LCD_ShowString(1,1,"-P-");
  85   4                                      if(pwm>0){
  86   5                                              if(pwm!=100){
  87   6                                                      LCD_ShowNum(1,4,pwm,2);LCD_ShowString(1,6,"     ");}
  88   5                                              else
  89   5                                                      LCD_ShowNum(1,4,pwm,3);
  90   5                                              if(pwm==0){LCD_ShowNum(1,4,0,1);LCD_ShowString(1,5,"     ");}
  91   5                                      }else if(pwm<0){
  92   5                                              LCD_ShowString(1,4,"-");
  93   5                                              if(pwm!=-100){
  94   6                                                      LCD_ShowNum(1,5,0-pwm,2);LCD_ShowString(1,7,"     ");}
  95   5                                              else
  96   5                                                      LCD_ShowNum(1,5,0-pwm,3);
  97   5                                      }
  98   4                                      if(pwm==0){LCD_ShowNum(1,4,0,1);LCD_ShowString(1,5,"        ");}
  99   4                                      
 100   4                                      //LCD_ShowString(1,1,"-P-");
 101   4                                      //LCD_ShowNum(1,4,pwm,2);
 102   4                              }
 103   3                              if(setMode){
 104   4                                      LCD_ShowString(1,1,"-S-");
 105   4                                      if(pwm>0){
 106   5                                              if(pwm!=100){
 107   6                                                      if(setModeFlag)
 108   6                                                              LCD_ShowNum(1,4,pwm,2);
 109   6                                                      else
 110   6                                                              LCD_ShowString(1,4,"     ");
 111   6                                              }else{
 112   6                                                      if(setModeFlag)
 113   6                                                              LCD_ShowNum(1,4,pwm,3);
 114   6                                                      else
 115   6                                                              LCD_ShowString(1,4,"     ");
 116   6                                              }
C51 COMPILER V9.54   MAIN                                                                  11/30/2023 23:48:59 PAGE 3   

 117   5                                              
 118   5                                      }else if(pwm<0){
 119   5                                              LCD_ShowString(1,4,"-");
 120   5                                              if(pwm!=-100){
 121   6                                                      if(setModeFlag)
 122   6                                                              LCD_ShowNum(1,5,0-pwm,2);
 123   6                                                      else
 124   6                                                              LCD_ShowString(1,4,"      ");
 125   6                                              }else{
 126   6                                                      if(setModeFlag)
 127   6                                                              LCD_ShowNum(1,5,0-pwm,3);
 128   6                                                      else
 129   6                                                              LCD_ShowString(1,4,"       ");
 130   6                                              }
 131   5                                      }
 132   4                                      if(pwm==0){
 133   5                                              if(setModeFlag)
 134   5                                                      LCD_ShowNum(1,4,0,1);
 135   5                                              else
 136   5                                                      LCD_ShowString(1,4,"       ");}
 137   4      //                              LCD_ShowString(1,1,"-S-");
 138   4      //                              if(setModeFlag)
 139   4      //                                      LCD_ShowNum(1,4,pwm,2);
 140   4      //                              else
 141   4      //                                      LCD_ShowString(1,4,"   ");
 142   4                              }
 143   3      
 144   3                      }
 145   2              }
 146   1      }
 147          
 148          //void UART_Routine() interrupt 4
 149          //{
 150          //      
 151          //      if(RI==1)                                       //如果接收标志位为1，接收到了数据
 152          //      {
 153          //              //P2=~SBUF;                             //读取数据，取反后输出到LED
 154          //              charFromU = SBUF;
 155          //              UART_SendByte(SBUF);    //将受到的数据发回串口
 156          //              getChar =1;
 157          //              RI=0;                                   //接收标志位清0
 158          //              
 159          
 160          
 161          //      }
 162          //}
 163          
 164          void USART() interrupt 4   //标志位TI和RI需要手动复位，TI和RI置位共用一个中断入口
 165          {
 166   1          ReceiveString();
 167   1              PutString(rawChar);
 168   1              parse();
 169   1              changeJudge();
 170   1          RI=0;  //接收并处理一次数据后把接收中断标志清除一下，拒绝响应在中断接收忙的时候发来的请求
 171   1      }
 172           
 173          void Timer0_Rountine(void) interrupt 1
 174          {
 175   1              static unsigned int T0count,setModeCount,countT;
 176   1              T0count++;
 177   1              setModeCount++;
 178   1              countT++;
C51 COMPILER V9.54   MAIN                                                                  11/30/2023 23:48:59 PAGE 4   

 179   1              countT%=100;
 180   1              TL0 = 0x66;             //设置定时初值
 181   1              TH0 = 0xFC;             //设置定时初值
 182   1              if(T0count == 20){
 183   2                      //P2_5 = 0;
 184   2                      key_loop();
 185   2                      T0count = 0;
 186   2              }
 187   1              if(setModeCount >=500){
 188   2                      setModeFlag = !setModeFlag;
 189   2                      setModeCount=0;
 190   2              }
 191   1              if(startStatus&&motorEnable){
 192   2                      if(pwm>=0){
 193   3                              IN2=0;
 194   3                              if(countT<compare)
 195   3                                      IN1=1;
 196   3                              else
 197   3                                      IN1=0;
 198   3                      }else{
 199   3                              IN1=0;
 200   3                              if(countT<compare)
 201   3                                      IN2=1;
 202   3                              else
 203   3                                      IN2=0;
 204   3                      }
 205   2              }
 206   1      
 207   1      }
 208          void parse(){
 209   1              int location = 0;
 210   1              int r_location;
 211   1              for(location =0;location<10;location++){
 212   2                      if(rawChar[location]=='-'&&location!=0){
 213   3                              rawChar[location] = '\0';
 214   3                              break;
 215   3                      }}
 216   1              frontData = atoi(rawChar);
 217   1              endData = atoi(&(rawChar[location+1]));
 218   1      //      LCD_ShowNum(1,7,frontData,3);   //测试用
 219   1      //      LCD_ShowNum(2,7,endData,3);
 220   1      }
*** WARNING C280 IN LINE 210 OF main.c: 'r_location': unreferenced local variable
 221          void changeJudge(){
 222   1              if(frontData == pwm&&setMode){
 223   2                      if(endData<=100 && endData>=-100)
 224   2                              pwm = endData;
 225   2              }
 226   1      }
 227          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1071    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
